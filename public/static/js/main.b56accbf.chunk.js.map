{"version":3,"sources":["sketches/P5Wrapper.js","sketches/tableSketch.js","components/App.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","call","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react2","require","_p52","P5Wrapper","_React$Component","instance","TypeError","_classCallCheck","this","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","canvas","sketch","wrapper","myCustomRedrawAccordingToNewPropsHandler","newprops","removeChild","childNodes","updateState","_this","createElement","ref","module","DENOMINATION_COLOR_MAP","1","5","25","100","500","1000","tableSketch","p","ARC_DIAMETER","ARC_RADIUS","INSURANCE_LINE_DIAMETER","numActivePlayers","cardImages","players","dealer","tableCanvasWrapper","document","getElementById","preload","suitEnum","push","rank","loadImage","concat","setup","noLoop","createCanvas","offsetWidth","offsetHeight","height","draw","background","noFill","stroke","angleMode","DEGREES","translate","width","strokeWeight","drawInsuranceLine","drawPlayerSpots","pop","drawAllPlayersData","drawDealersCards","gameState","activePlayers","keys","redraw","arc","SPOTS_START_ANGLE","SPOTS_END_ANGLE","spotPosition","playerPosition","ellipse","getXPositionFromPlayerPosition","getYPositionFromPlayerPosition","hands","dealersHand","hand","cardPosition","card","cardImage","getCardImage","xPosition","image","SPOT_DIAMETER","Infinity","rect","forEach","position","drawPlayerData","player","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","drawBet","drawHand","err","return","topChipColor","determineTopChipColor","bet","chipText","formatChipText","chipTextSize","determineChipTextSize","fill","noStroke","textSize","textStyle","BOLD","textFont","rectMode","CENTER","textAlign","text","toString","CARD_WIDTH","yPosition","denominations","denominationIndex","betModDenomination","suit","getPositionFromPlayerPosition","cos","bind","sin","cardOffset","trigFunction","App","state","addPlayer","setState","react_default","a","className","Row_default","Col_default","id","xs","md","P5Wrapper_default","Button_default","type","onClick","numPlayers","ruleSet","h17","roundIsOver","bustedOrDiscarded","currentHandIndex","2","3","4","6","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b56accbf.chunk.js","sourcesContent":["Object.defineProperty(exports, '__esModule', {\r\n  value: true,\r\n})\r\n\r\nvar _createClass = (function() {\r\n  function defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i]\r\n      descriptor.enumerable = descriptor.enumerable || false\r\n      descriptor.configurable = true\r\n      if ('value' in descriptor) descriptor.writable = true\r\n      Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n  }\r\n  return function(Constructor, protoProps, staticProps) {\r\n    if (protoProps) defineProperties(Constructor.prototype, protoProps)\r\n    if (staticProps) defineProperties(Constructor, staticProps)\r\n    return Constructor\r\n  }\r\n})()\r\n\r\nvar _get = function get(_x, _x2, _x3) {\r\n  var _again = true\r\n  while (_again) {\r\n    var object = _x,\r\n      property = _x2,\r\n      receiver = _x3\r\n    _again = false\r\n    if (object === null) object = Function.prototype\r\n    var desc = Object.getOwnPropertyDescriptor(object, property)\r\n    if (desc === undefined) {\r\n      var parent = Object.getPrototypeOf(object)\r\n      if (parent === null) {\r\n        return undefined\r\n      } else {\r\n        _x = parent\r\n        _x2 = property\r\n        _x3 = receiver\r\n        _again = true\r\n        desc = parent = undefined\r\n        continue\r\n      }\r\n    } else if ('value' in desc) {\r\n      return desc.value\r\n    } else {\r\n      var getter = desc.get\r\n      if (getter === undefined) {\r\n        return undefined\r\n      }\r\n      return getter.call(receiver)\r\n    }\r\n  }\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n  return obj && obj.__esModule ? obj : { default: obj }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError('Cannot call a class as a function')\r\n  }\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n  if (typeof superClass !== 'function' && superClass !== null) {\r\n    throw new TypeError(\r\n      'Super expression must either be null or a function, not ' +\r\n        typeof superClass\r\n    )\r\n  }\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true,\r\n    },\r\n  })\r\n  if (superClass)\r\n    Object.setPrototypeOf\r\n      ? Object.setPrototypeOf(subClass, superClass)\r\n      : (subClass.__proto__ = superClass)\r\n}\r\n\r\nvar _react = require('react')\r\n\r\nvar _react2 = _interopRequireDefault(_react)\r\n\r\nvar _p5 = require('p5')\r\n\r\nvar _p52 = _interopRequireDefault(_p5)\r\n\r\nvar P5Wrapper = (function(_React$Component) {\r\n  _inherits(P5Wrapper, _React$Component)\r\n\r\n  function P5Wrapper() {\r\n    _classCallCheck(this, P5Wrapper)\r\n\r\n    _get(Object.getPrototypeOf(P5Wrapper.prototype), 'constructor', this).apply(\r\n      this,\r\n      arguments\r\n    )\r\n  }\r\n\r\n  _createClass(P5Wrapper, [\r\n    {\r\n      key: 'componentDidMount',\r\n      value: function componentDidMount() {\r\n        this.canvas = new _p52['default'](this.props.sketch, this.wrapper)\r\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n          this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props)\r\n        }\r\n      },\r\n    },\r\n    {\r\n      key: 'componentWillReceiveProps',\r\n      value: function componentWillReceiveProps(newprops) {\r\n        if (this.props.sketch !== newprops.sketch) {\r\n          this.wrapper.removeChild(this.wrapper.childNodes[0])\r\n          this.canvas = new _p52['default'](newprops.sketch, this.wrapper)\r\n        }\r\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n          this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops)\r\n          this.canvas.updateState()\r\n        }\r\n      },\r\n    },\r\n    {\r\n      key: 'render',\r\n      value: function render() {\r\n        var _this = this\r\n\r\n        return _react2['default'].createElement('div', {\r\n          ref: function(wrapper) {\r\n            return (_this.wrapper = wrapper)\r\n          },\r\n        })\r\n      },\r\n    },\r\n  ])\r\n\r\n  return P5Wrapper\r\n})(_react2['default'].Component)\r\n\r\nexports['default'] = P5Wrapper\r\nmodule.exports = exports['default']\r\n","const CENTER_OF_SPOT_ARC_OFFSET_Y = -65\r\nconst INSURANCE_LINE_ARC_OFFSET_FROM_SPOTS = 100\r\nconst INSURANCE_LINE_WIDTH = 30\r\nconst INSURANCE_LINE_ANGLE_OFFSET_FROM_SPOTS = 5\r\nconst SPOTS_START_ANGLE = 35\r\nconst SPOTS_END_ANGLE = 145\r\nconst NUMBER_OF_SPOTS = 6\r\nconst SPOT_DIAMETER = 50\r\nconst CARD_WIDTH = SPOT_DIAMETER * 1.4\r\nconst CARD_HEIGHT = 2.1 * SPOT_DIAMETER\r\nconst CARD_WIDTH_WITHIN_IMAGE = Infinity\r\nconst CARD_HEIGHT_WITHIN_IMAGE = Infinity\r\nconst SPACE_BETWEEN_DEALER_CARDS = 15\r\nconst FIRST_DEALER_CARD_X_POSITION_RATIO = 0.65\r\nconst DEALER_CARD_POSITION_Y = 25\r\nconst CARD_OFFSET_X = 20\r\nconst CARD_OFFSET_Y = 30\r\nconst CARD_ADJUSTMENT = CARD_WIDTH / 2\r\nconst NUMBER_OF_SUITS = 4\r\nconst NUMBER_OF_RANKS = 13\r\nconst ZERO = 0\r\nconst ONE = 1\r\nconst TABLE_WRAPPER_CLEARANCE_X = 17\r\nconst TABLE_WRAPPER_CLEARANCE_Y = 22\r\nconst TABLE_CANVAS_WRAPPER_DIV = 'table-canvas-wrapper'\r\nconst SERVER_PROTOCOL = 'http'\r\nconst SERVER_HOST_ADDR = 'localhost'\r\nconst SERVER_PORT = '3000'\r\nconst TABLE_LINE_COLOR = 'white'\r\nconst SECONDARY_TABLE_LINE_COLOR = 'yellow'\r\nconst CARD_BORDER_COLOR = 'black'\r\nconst TABLE_LINE_STROKE_WEIGHT = 3\r\nconst CARD_STROKE_WEIGHT = 2\r\nconst TABLE_COLOR = '#0C7327'\r\n\r\nconst INSURANCE_LINE_START_ANGLE =\r\n  SPOTS_START_ANGLE - INSURANCE_LINE_ANGLE_OFFSET_FROM_SPOTS\r\nconst INSURANCE_LINE_END_ANGLE =\r\n  SPOTS_END_ANGLE + INSURANCE_LINE_ANGLE_OFFSET_FROM_SPOTS\r\n\r\nconst DENOMINATION_COLOR_MAP = {\r\n  1: 'white',\r\n  5: 'red',\r\n  25: '#57e571',\r\n  100: 'black',\r\n  500: '#9b4dcc',\r\n  1000: 'yellow',\r\n}\r\n\r\nexport default p => {\r\n  let ARC_DIAMETER, ARC_RADIUS, INSURANCE_LINE_DIAMETER\r\n  let numActivePlayers = ZERO\r\n  let cardImages = []\r\n  let players = {}\r\n  let dealer = {}\r\n\r\n  const tableCanvasWrapper = document.getElementById(TABLE_CANVAS_WRAPPER_DIV)\r\n\r\n  const canvasWidth = () =>\r\n    tableCanvasWrapper.offsetWidth - TABLE_WRAPPER_CLEARANCE_X\r\n\r\n  const canvasHeight = () =>\r\n    tableCanvasWrapper.offsetHeight - TABLE_WRAPPER_CLEARANCE_Y\r\n\r\n  p.preload = () => {\r\n    for (let suitEnum = ZERO; suitEnum < NUMBER_OF_SUITS; ++suitEnum) {\r\n      cardImages.push([])\r\n      for (let rank = ONE; rank <= NUMBER_OF_RANKS; ++rank)\r\n        cardImages[suitEnum][rank] = p.loadImage(\r\n          `${SERVER_PROTOCOL}://${SERVER_HOST_ADDR}:${SERVER_PORT}/cards/${suitEnum}_${rank}.png`\r\n        )\r\n    }\r\n  }\r\n\r\n  p.setup = () => {\r\n    p.noLoop()\r\n    p.createCanvas(canvasWidth(), canvasHeight())\r\n    ARC_DIAMETER = p.height * 1.4\r\n    ARC_RADIUS = ARC_DIAMETER / 2\r\n    INSURANCE_LINE_DIAMETER =\r\n      ARC_DIAMETER - INSURANCE_LINE_ARC_OFFSET_FROM_SPOTS\r\n  }\r\n\r\n  p.draw = () => {\r\n    p.background(TABLE_COLOR)\r\n    p.noFill()\r\n\r\n    p.push()\r\n    p.stroke(TABLE_LINE_COLOR)\r\n    p.angleMode(p.DEGREES)\r\n    p.translate(p.width / 2, CENTER_OF_SPOT_ARC_OFFSET_Y)\r\n\r\n    p.push()\r\n    p.strokeWeight(TABLE_LINE_STROKE_WEIGHT)\r\n    drawInsuranceLine()\r\n    drawPlayerSpots()\r\n    p.pop()\r\n\r\n    drawAllPlayersData()\r\n    p.pop()\r\n\r\n    drawDealersCards()\r\n  }\r\n\r\n  p.myCustomRedrawAccordingToNewPropsHandler = props => {\r\n    players = props.gameState.activePlayers\r\n    numActivePlayers = Object.keys(players).length\r\n    dealer = props.gameState.dealer\r\n  }\r\n\r\n  p.updateState = () => p.redraw()\r\n\r\n  const drawInsuranceLine = () => {\r\n    const arcCenterX = ZERO\r\n    const arcCenterY = ZERO\r\n\r\n    p.arc(\r\n      arcCenterX,\r\n      arcCenterY,\r\n      INSURANCE_LINE_DIAMETER,\r\n      INSURANCE_LINE_DIAMETER,\r\n      INSURANCE_LINE_START_ANGLE,\r\n      INSURANCE_LINE_END_ANGLE\r\n    )\r\n\r\n    p.arc(\r\n      arcCenterX,\r\n      arcCenterX,\r\n      INSURANCE_LINE_DIAMETER + INSURANCE_LINE_WIDTH,\r\n      INSURANCE_LINE_DIAMETER + INSURANCE_LINE_WIDTH,\r\n      INSURANCE_LINE_START_ANGLE,\r\n      INSURANCE_LINE_END_ANGLE\r\n    )\r\n  }\r\n\r\n  const drawPlayerSpots = () => {\r\n    for (\r\n      let spotPosition = ZERO;\r\n      spotPosition < NUMBER_OF_SPOTS;\r\n      ++spotPosition\r\n    ) {\r\n      if (spotPosition < numActivePlayers) p.stroke(SECONDARY_TABLE_LINE_COLOR)\r\n      else p.stroke(TABLE_LINE_COLOR)\r\n\r\n      const playerPosition = spotPosition + ONE\r\n      const ignoreSecondParameter = ZERO\r\n\r\n      p.ellipse(\r\n        getXPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n        getYPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n        SPOT_DIAMETER,\r\n        SPOT_DIAMETER\r\n      )\r\n    }\r\n  }\r\n\r\n  const drawDealersCards = () => {\r\n    if (!dealer || !dealer.hands || !dealer.hands[ZERO]) return\r\n\r\n    const dealersHand = dealer.hands[ZERO].hand\r\n\r\n    for (\r\n      let cardPosition = ZERO;\r\n      cardPosition < dealersHand.length;\r\n      ++cardPosition\r\n    ) {\r\n      const card = dealersHand[cardPosition]\r\n      const cardImage = getCardImage(card)\r\n      const xPosition =\r\n        p.width * FIRST_DEALER_CARD_X_POSITION_RATIO -\r\n        cardPosition * (CARD_WIDTH + SPACE_BETWEEN_DEALER_CARDS)\r\n\r\n      p.image(\r\n        cardImage,\r\n        xPosition,\r\n        DEALER_CARD_POSITION_Y,\r\n        CARD_WIDTH,\r\n        CARD_HEIGHT,\r\n        ZERO,\r\n        ZERO,\r\n        CARD_WIDTH_WITHIN_IMAGE,\r\n        CARD_HEIGHT_WITHIN_IMAGE\r\n      )\r\n\r\n      p.push()\r\n      p.stroke(CARD_BORDER_COLOR)\r\n      p.strokeWeight(CARD_STROKE_WEIGHT)\r\n      p.rect(xPosition, DEALER_CARD_POSITION_Y, CARD_WIDTH, CARD_HEIGHT)\r\n      p.pop()\r\n    }\r\n  }\r\n\r\n  const drawAllPlayersData = () =>\r\n    Object.keys(players).forEach(position =>\r\n      drawPlayerData(position, players[position])\r\n    )\r\n\r\n  const drawPlayerData = (playerPosition, player) => {\r\n    if (!player) return\r\n\r\n    for (const hand of player.hands) {\r\n      drawBet(playerPosition, hand)\r\n      drawHand(playerPosition, hand)\r\n    }\r\n  }\r\n\r\n  const drawBet = (playerPosition, hand) => {\r\n    if (!hand) return\r\n\r\n    const ignoreSecondParameter = ZERO\r\n    const topChipColor = determineTopChipColor(hand.bet)\r\n    const chipText = formatChipText(hand.bet)\r\n    const chipTextSize = determineChipTextSize(chipText)\r\n\r\n    p.push()\r\n    p.strokeWeight(2)\r\n    p.stroke(0, 0, 0, 100)\r\n    p.fill(topChipColor)\r\n    p.ellipse(\r\n      getXPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n      getYPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n      SPOT_DIAMETER * 0.6,\r\n      SPOT_DIAMETER * 0.6\r\n    )\r\n    p.pop()\r\n\r\n    p.push()\r\n    p.noStroke()\r\n    p.textSize(chipTextSize)\r\n    p.textStyle(p.BOLD)\r\n    p.textFont('Helvetica')\r\n    p.rectMode(p.CENTER)\r\n    p.textAlign(p.CENTER, p.CENTER)\r\n\r\n    p.fill(topChipColor === 'black' ? 'white' : 'black')\r\n    p.text(\r\n      chipText,\r\n      2 + getXPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n      1 + getYPositionFromPlayerPosition(playerPosition, ignoreSecondParameter),\r\n      SPOT_DIAMETER,\r\n      SPOT_DIAMETER\r\n    )\r\n    p.pop()\r\n  }\r\n\r\n  const determineChipTextSize = text => {\r\n    const length = text.length\r\n    if (length < 2) return 22\r\n    if (length < 3) return 20\r\n    if (length < 4) return 16\r\n    return 14\r\n  }\r\n\r\n  const formatChipText = bet => {\r\n    if (bet < 1000) return bet.toString()\r\n    return bet / 1000 + 'k'\r\n  }\r\n\r\n  const drawHand = (playerPosition, hand) => {\r\n    if (!hand || !hand.hand) return\r\n\r\n    p.push()\r\n    p.translate(-CARD_ADJUSTMENT, CARD_ADJUSTMENT)\r\n    p.stroke(CARD_BORDER_COLOR)\r\n    p.strokeWeight(CARD_STROKE_WEIGHT)\r\n\r\n    for (\r\n      let cardPosition = ZERO;\r\n      cardPosition < hand.hand.length;\r\n      ++cardPosition\r\n    ) {\r\n      const card = hand.hand[cardPosition]\r\n      const cardImage = getCardImage(card)\r\n\r\n      const xPosition = getXPositionFromPlayerPosition(\r\n        playerPosition,\r\n        cardPosition\r\n      )\r\n\r\n      const yPosition = getYPositionFromPlayerPosition(\r\n        playerPosition,\r\n        cardPosition\r\n      )\r\n\r\n      p.image(\r\n        cardImage,\r\n        xPosition,\r\n        yPosition,\r\n        CARD_WIDTH,\r\n        CARD_HEIGHT,\r\n        ZERO,\r\n        ZERO,\r\n        CARD_WIDTH_WITHIN_IMAGE,\r\n        CARD_HEIGHT_WITHIN_IMAGE\r\n      )\r\n\r\n      p.rect(xPosition, yPosition, CARD_WIDTH, CARD_HEIGHT)\r\n    }\r\n\r\n    p.pop()\r\n  }\r\n\r\n  const determineTopChipColor = bet => {\r\n    const denominations = Object.keys(DENOMINATION_COLOR_MAP)\r\n    let denominationIndex = denominations.length - 1\r\n    let betModDenomination = bet\r\n\r\n    while (betModDenomination !== 0)\r\n      betModDenomination %= denominations[denominationIndex--]\r\n\r\n    return DENOMINATION_COLOR_MAP[denominations[++denominationIndex]]\r\n  }\r\n\r\n  const getCardImage = card => cardImages[card.suit][card.value]\r\n\r\n  const getXPositionFromPlayerPosition = (playerPosition, cardPosition) =>\r\n    getPositionFromPlayerPosition(\r\n      playerPosition,\r\n      cardPosition,\r\n      CARD_OFFSET_X,\r\n      p.cos.bind(p)\r\n    )\r\n\r\n  const getYPositionFromPlayerPosition = (playerPosition, cardPosition) =>\r\n    getPositionFromPlayerPosition(\r\n      playerPosition,\r\n      cardPosition,\r\n      CARD_OFFSET_Y,\r\n      p.sin.bind(p)\r\n    )\r\n\r\n  const getPositionFromPlayerPosition = (\r\n    playerPosition,\r\n    cardPosition,\r\n    cardOffset,\r\n    trigFunction\r\n  ) =>\r\n    (ARC_RADIUS + cardPosition * cardOffset) *\r\n    trigFunction(\r\n      ((SPOTS_END_ANGLE - SPOTS_START_ANGLE) / (NUMBER_OF_SPOTS - ONE)) *\r\n        (playerPosition - ONE) +\r\n        SPOTS_START_ANGLE\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Row from 'react-bootstrap/lib/Row'\r\nimport Button from 'react-bootstrap/lib/Button'\r\nimport Col from 'react-bootstrap/lib/Col'\r\nimport P5Wrapper from 'sketches/P5Wrapper'\r\nimport tableSketch from 'sketches/tableSketch'\r\nimport 'components/App.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    numActivePlayers: 0,\r\n  }\r\n\r\n  addPlayer = () => {\r\n    if (this.state.numActivePlayers > 5) return\r\n    this.setState({\r\n      numActivePlayers: this.state.numActivePlayers + 1,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Row className=\"show-grid\">\r\n          <Col id=\"table-sketch-col\" xs={12} md={8}>\r\n            <div id=\"table-canvas-wrapper\">\r\n              <P5Wrapper gameState={gameState} sketch={tableSketch} />\r\n            </div>\r\n          </Col>\r\n          <Col id=\"settings-col\" xs={12} md={4}>\r\n            <Button type=\"primary\" onClick={this.addPlayer}>\r\n              Add Player\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\nconst gameState = {\r\n  numPlayers: 2,\r\n  ruleSet: { h17: true },\r\n  roundIsOver: false,\r\n  activePlayers: {\r\n    '1': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 22000,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 13 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n    '2': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 12,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 1 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n    '3': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 500,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 12 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n    '4': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 2000,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 4 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n    '5': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 2100,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 4 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n    '6': {\r\n      hands: [\r\n        {\r\n          bustedOrDiscarded: false,\r\n          bet: 3,\r\n          hand: [\r\n            { suit: 3, value: 2 },\r\n            { suit: 2, value: 11 },\r\n            { suit: 1, value: 3 },\r\n            { suit: 3, value: 4 },\r\n            { suit: 3, value: 4 },\r\n          ],\r\n        },\r\n      ],\r\n      currentHandIndex: 0,\r\n    },\r\n  },\r\n  dealer: {\r\n    hands: [\r\n      {\r\n        bustedOrDiscarded: false,\r\n        bet: 0,\r\n        hand: [{ suit: 1, value: 1 }, { suit: 3, value: 12 }],\r\n      },\r\n    ],\r\n    currentHandIndex: 0,\r\n  },\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'index.css'\nimport App from 'components/App'\nimport * as serviceWorker from 'serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}